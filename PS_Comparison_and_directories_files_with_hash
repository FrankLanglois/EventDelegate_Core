# Define the base directories (old and new versions)
$oldBasePath = "C:\Data\2025-01-01"
$newBasePath = "C:\Data\2025-03-01"

# Get all files from both folders recursively
$oldFiles = Get-ChildItem -Path $oldBasePath -File -Recurse
$newFiles = Get-ChildItem -Path $newBasePath -File -Recurse

# Create hash tables for efficient lookups
$oldFilesHash = @{}
$newFilesHash = @{}

# Build relative paths for old files
foreach ($file in $oldFiles) {
    $relativePath = $file.FullName.Replace($oldBasePath, "").TrimStart("\")
    $oldFilesHash[$relativePath] = $file
}

# Build relative paths for new files
foreach ($file in $newFiles) {
    $relativePath = $file.FullName.Replace($newBasePath, "").TrimStart("\")
    $newFilesHash[$relativePath] = $file
}

# Store results
$results = @()

# Compare files
foreach ($relativePath in $oldFilesHash.Keys) {
    if ($newFilesHash.ContainsKey($relativePath)) {
        # Both exist, check if content changed
        $oldHash = (Get-FileHash -Path $oldFilesHash[$relativePath].FullName -Algorithm SHA256).Hash
        $newHash = (Get-FileHash -Path $newFilesHash[$relativePath].FullName -Algorithm SHA256).Hash

        $status = if ($oldHash -eq $newHash) { "Identical" } else { "Modified" }

        $results += [PSCustomObject]@{
            FilePath   = $relativePath
            Status     = $status
            OldHash    = $oldHash
            NewHash    = $newHash
        }
    } else {
        # File is missing in the new version (Deleted)
        $results += [PSCustomObject]@{
            FilePath   = $relativePath
            Status     = "Removed"
            OldHash    = (Get-FileHash -Path $oldFilesHash[$relativePath].FullName -Algorithm SHA256).Hash
            NewHash    = "N/A"
        }
    }
}

# Check for new files added
foreach ($relativePath in $newFilesHash.Keys) {
    if (-not $oldFilesHash.ContainsKey($relativePath)) {
        $results += [PSCustomObject]@{
            FilePath   = $relativePath
            Status     = "Added"
            OldHash    = "N/A"
            NewHash    = (Get-FileHash -Path $newFilesHash[$relativePath].FullName -Algorithm SHA256).Hash
        }
    }
}

# Export results to CSV
$csvPath = "C:\FileComparison.csv"
$results | Export-Csv -Path $csvPath -NoTypeInformation

Write-Host "âœ… Comparison completed. Results saved to: $csvPath"
